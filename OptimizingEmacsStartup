[new:TheAnarcat:2011-12-21 02:45 EST]

Use [BenchmarkInit benchmark-init] to find out where Emacs is spending time during startup.

Most of the links in this page were dead last time I checked. Here are more recent references.

* http://stackoverflow.com/questions/778716/how-can-i-make-emacs-start-up-faster
* http://tychoish.com/rhizome/decreasing-emacs-start-times/
* http://a-nickels-worth.blogspot.com/2007/11/effective-emacs.html

It all boils down to:

* put less stuff in your .emacs, separate the files in different places and use LoadingLispFiles to load them
* use autoload (AutoLoad) and eval-after-load (EvalAfterLoad) instead of load (LoadingLispFiles) and require
* byte-compile files (see AutoRecompile)
* never quit emacs (with EmacsClient)

----

Relaxing the rather conservative garbage collector can also speed up startup times:

<pre>
;; Minimize garbage collection during startup
(setq gc-cons-threshold most-positive-fixnum)

;; Lower threshold back to 8 MiB (default is 800kB)
(add-hook 'emacs-startup-hook
          (lambda ()
            (setq gc-cons-threshold (expt 2 23))))
</pre>

Source: https://blog.d46.us/advanced-emacs-startup/

----

Here's an emacs daemon pool, useful for those that want improved startup time but don't want to deal with daemon mode:

http://github.com/cfal/emacs-pool

-- cfal

Here is an article I wrote about optimizing Emacs startup times.  Rather than posting the whole text of the article, I will just give the link to my site (feel free to edit and post the text here if you feel that would be more approriate):

[s]http://metashell-v1.blogspot.com/2006/04/howto-lightning-fast-emacs-startup.html[/s]

-- kruhft

[new:AnupamSengupta:2010-09-16 14:51 UTC]
The Blog does not exist any more (as checked on 16th September 2010).  Does anyone have the text of the entry?

-- AnupamSengupta

[new:MyronWu:2012-06-10 06:09:06 UTC]
The blog entry is on archive.org here:

http://web.archive.org/web/20060501032837/http://metashell.blogspot.com/2006/04/howto-lightning-fast-emacs-startup.html

-- MyronWu

[new:DrewAdams:2006-04-22 17:59 UTC]
Part of the instructions posted involve trying to determine library dependencies by hand in an iterative fashion (add a library, try again, check the error messages, add a library, try again...).

You can use library Lisp:lib-requires.el to facilitate this task of determining library dependencies. See [[LibraryDependencies#LibRequires]]. -- DrewAdams
[new]
Here is a function to do some of the manual work that I outlined in my article.  It parses the *Messages* buffer looking for 'Loading [file]...' lines, and then prints the lines that need to be inserted into loadup.el to preload those elisp files into the main emacs binary.

<pre>
(defun loadup-gen ()
  "Generate the lines to include in the lisp/loadup.el file
to place all of the libraries that are loaded by your InitFile
into the main dumped emacs"
  (interactive)
  (defun get-loads-from-*Messages* ()
    (save-excursion
      (let ((retval ()))
	(set-buffer "*Messages*")
	(beginning-of-buffer)
	(while (search-forward-regexp "^Loading " nil t)
	  (let ((start (point)))
	    (search-forward "...")
	    (backward-char 3)
	    (setq retval (cons (buffer-substring-no-properties start (point)) retval))))
	retval)))
  (map 'list
       (lambda (file) (princ (format "(load \"%s\")\n" file)))
       (get-loads-from-*Messages*)))
</pre>

----

Optimizing emacs startup on another front: i wrote a library that helps optimize the startup times of your InitFile:  http://www.gnufans.net/~deego/pub/emacspub/lisp-mine/dope/ --- deego

----

Here's a bit of code i use to time my .emacs:

<pre>
;; time the loading of the .emacs
;; keep this on top of your .emacs
(defvar *emacs-load-start* (current-time))
(defun anarcat/time-to-ms (time)
  (+ (* (+ (* (car time) (expt 2 16)) (car (cdr time))) 1000000) (car (cdr (cdr time)))))
(defun anarcat/display-timing ()
  (message ".emacs loaded in %fms" (/ (- (anarcat/time-to-ms (current-time)) (anarcat/time-to-ms *emacs-load-start*)) 1000000.0)))
(add-hook 'after-init-hook 'anarcat/display-timing t)
</pre>

.. modified from http://a-nickels-worth.blogspot.com/2007/11/effective-emacs.html. -- TheAnarcat

[new]
Emacs already comes with `M-x emacs-init-time'.

----
CategoryDotEmacs
