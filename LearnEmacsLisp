EmacsLisp (Elisp) is the language that much of Emacs is written in, and it is also the language that you can use to [[customize]] Emacs for your own use.

Don't worry - even if you're an EmacsNewbie, you can get the hang of it. Learning a little Emacs Lisp will help you use Emacs more effectively:

* You will better understand the documentation and online help for functions and variables.
* You will be able to consult the Lisp source code for a function or variable, in order to understand it still better.
* You will be able to convert common [[key sequence]]s you use into [[keyboard macro]]s or your own [[command]]s defined in Lisp.
* You will be able to take snippets of code from the standard source code or elsewhere and adapt them to create your own Emacs commands.
* You will be able to attract better guidance (and/or commiseration) from fellow Emacs users.
* You will be able to make Emacs better fit your needs and fancies.


== Emacs Lisp for things you already use ==

* Use `C-x ESC ESC' (`repeat-complex-command') to repeat [[command]]s you execute, and look at the Emacs Lisp code that executes them, before hitting `RET' (Return) -- see RepeatLastCommand.  You can edit that code to get a variation on the last behavior.

* Use `C-h f' (`describe-function') and `C-h v' (`describe-variable') to understand commands and [[variable]]s you use. You'll see a description of the function or variable. If you have the Emacs source code locally, you will also see a link to the relevant definition in the code. Click the link or move the [[cursor]] to it and press `RET' to follow it.

* Use `C-h k' (`describe-key') to see which command is invoked when you use a [[key]]. The description shown includes the command description (see previous).

== Resources ==

* Read the ''Emacs Lisp Introduction'': EmacsLispIntro. Use `C-h i' (`info'), then choose `Emacs Lisp Intro'.  You can also read this manual [[https://www.gnu.org/software/emacs/manual/html_node/eintr/index.html on the Web]] or as a portable [[http://epub-manuals.ourproject.org/blog/an-introduction-to-programming-in-emacs-lisp/ epub book]].
* Read the ''Emacs Lisp Reference'' manual: EmacsLispReference. Use `C-h i' (`info'), then choose `Elisp'. You can also read this manual [[https://www.gnu.org/software/emacs/manual/html_node/elisp/index.html on the Web]] or as a portable [[http://epub-manuals.ourproject.org/blog/gnu-emacs-lisp-reference-manual/ epub book]].
* [http://steve-yegge.blogspot.com/2008/01/emergency-elisp.html Emergency Elisp]: Good for people with programming backgrounds - by SteveYegge
* [https://bzg.fr/en/learn-emacs-lisp-in-15-minutes Learn Emacs Lisp in 15 Minutes] - by BastienGuerry, Org mode Maintainer.
 [http://orgmode.org/][https://git.savannah.gnu.org/cgit/emacs.git/tree/etc/AUTHORS#n449]
* [https://github.com/chrisdone/elisp-guide A quick guide to Emacs Lisp programming] - by ChrisDone, author of [https://github.com/chrisdone/structured-haskell-mode structured-haskell-mode], [https://github.com/chrisdone/god-mode God Mode], and [https://github.com/chrisdone?utf8=%E2%9C%93&tab=repositories&q=&type=source&language=emacs%20lisp etc].
* [https://sachachua.com/blog/2014/06/read-lisp-tweak-emacs-beginner-14-try-emacs-lisp/ Read Lisp, Tweak Emacs: How to read Emacs Lisp so that you can customize Emacs] - by SachaChua, ex-maintainer of PlannerMode, EmacsWikiMode, RememberMode and author of ErcCompletion [https://git.savannah.gnu.org/cgit/emacs.git/tree/etc/AUTHORS#n4231].
* [http://ergoemacs.org/emacs/elisp.html Practical Emacs Lisp] - by [https://www.emacswiki.org/emacs/Xah_Lee Xah Lee].
* Mitch Fincher's 50-point summary of the language: [http://www.fincher.org/tips/Languages/Emacs.shtml]
* Check out examples in ElispCookbook
* Check out existing ExampleConfigurations
* check out [https://github.com/p3r7/awesome-elisp Awesome elisp] on GitHub. 

== General Lisp Resources ==

Emacs Lisp belong to the Lisp family (WikiPedia:Lisp_programming_language), and learning it will teach you Lisp concepts, as well as learning Lisp concepts will help you with Emacs Lisp.

* Harold Abelson & Gerald Jay Sussman: MIT lectures introducing Lisp (videos):
[https://www.youtube.com/watch?v=-J_xL4IGhJA] is the first one, ''Lecture 1A: Overview and Introduction to Lisp''...  Excellent, from soup to nuts, step by step. It doesn't get any better than this.
* Harold Abelson, Gerald Jay Sussman with Julie Sussman's book ''Structure and Interpretation of Computer Programs'' (Scheme, not Emacs Lisp): [https://sarabander.github.io/sicp/] (The book for the course shown in the videos.)
* Pascal Costanza'a intro to Lisp (in general, not Emacs Lisp):
[http://p-cos.net/lisp/guide.html]
* Paul Graham's overview of Lisp (in general, not Emacs Lisp):
[http://www.paulgraham.com/rootsoflisp.html]
* Paul Graham's book ''ANSI Common Lisp'', chapter 2 (Common Lisp, not Emacs Lisp):
[http://lib.store.yahoo.net/lib/paulgraham/acl2.txt]
* Peter Norvig's ''Tutorial on Good Lisp Programming Style'' [https://www.cs.umd.edu/%7Enau/cmsc421/norvig-lisp-style.pdf]
* Peter Seibel's book ''Practical Common Lisp'' (Common Lisp, not Emacs Lisp):
[http://www.gigamonkeys.com/book/]
* Steve Losh's article ''A Road to Common Lisp'' (Common Lisp, not Emacs Lisp): [http://stevelosh.com/blog/2018/08/a-road-to-common-lisp/]
* David B. Lamkin's book ''Successful Lisp'' (Common Lisp, not Emacs Lisp):
[https://successful-lisp.blogspot.com/] (The book is downloadable from his webpage.)

* Jos ́e Antonio Ortega Ruiz's article ''A Scheme bookshelf'' (Scheme, not Emacs Lisp): [http://programming-musings.org/2007/01/31/a_scheme_bookshelf/index.html]

----
CategoryCode
CategoryHelp
