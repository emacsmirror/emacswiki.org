[http://betterthangrep.com/ ack] is a replacement for 99% of the uses of <code>grep</code>, written in Perl.  Ack searches recursively through directories by default, while ignoring backup files, binary files, SubVersion, [[CVS]] and other [CategoryVersionControl VCS] directories. 

There are several GrepMode-like interfaces for Ack:

* [https://github.com/leoliu/ack-el ack.el and pcmpl-ack.el]
** distributed via [http://elpa.gnu.org/ GNU ELPA]
** run <code>M-x list-packages</code> in Emacs. (This requires Emacs version 24.1 or higher.)
* [http://rooijan.za.net/code/emacs-lisp/ack-el Another ack.el]
* [[FullAck|full-ack.el]]
* ack-and-a-half.el, an early fork of full-ack.el that didn't credit either of the original authors and violated the GPL by being released under an incompatible license. The repository has since been removed, but [https://github.com/kimvanwyk/ack-and-a-half/network various forks] can be found on github.

A minimalistic interface to Ack is:
{{{
(defvar ack-history nil
  "History for the `ack' command.")

(defun ack (command-args)
  (interactive
   (let ((ack-command "ack --nofilter --nogroup --with-filename "))
     (list (read-shell-command "Run ack (like this): "
                               ack-command
                               'ack-history))))
  (let ((compilation-disable-input t))
    (compilation-start (concat command-args " < " null-device)
                       'grep-mode)))
}}}

Alternatively, one can use <code>M-x rgrep</code> with ack thusly:
{{{
(grep-apply-setting 'grep-command "ack --with-filename --nofilter --nogroup ")
}}}

Beware of problems with ack's automatic detection of filter mode!  You might need to set <code>compilation-disable-input</code> to <code>t</code> and/or redirect the standard input of the <code>ack</code> command to <code>/dev/null</code>.

----
CategoryExternalUtilities CategoryRegexp
