In the Sway Window Manager sticky modifiers can be enabled by loading a custom keyboard configuration file defined using the X keyboard extension (xkb) standard.

Although originally used for X11 a xkb file is Wayland compositor compatible and can be directly loaded in Sway through its configuration file.

= To Long, Didn't Read =

If you are using en-US keyboard, then go to [[keymap_with_sticky_modifiers]] and save the plain text file as a file (Save as...) on your computer disk.  It is a plain text file.  You can inspect its contents.

Note where the file was saved, then let sway load the file with

  swaymsg input "type:keyboard" xkb_file $HOME/.config/keymap_with_locked_modifiers.xkb

Now try it out!  It has the following features:

Sticky Keys
* Ctrl, Shift, Super, Alt are sticky


Sticky Keys Demo
* Launch Emacs
* Press and release Ctrl
* Caps Lock indicator will be turned on, this is telling you that a Sticky Modifier is engaged
* Press and release letter x
* Now Echo Area will show C-x
* Caps Lock indicator will be turned off.

Cancel a Sticky Modifier
* Press and release Ctrl
* Caps Lock indicator will be turned on, this is telling you that a Sticky Modifier is engaged
* Press and release Ctrl
* Caps Lock indicator will be turned off, this is telling you that the sticky modifier is disengaged

Revert to non sticky behavior
* Launch Emacs
* Press and hold Ctrl
* Press and release letter x
* Release Ctrl
* Now Echo Area will show C-x


Easier to Access Modifiers
* Caps Lock is now Left Ctrl
* Apostrophe key is now Right Ctrl
* Menu key is now Right Super

Remapped Keys
* Apostrophe is now located on Tab key
* Tab key is now located on Lower-Right Ctrl
* You can access TAB with C-i

Finally, if you are satisfied with the result, put the line in your sway config

  input "type:keyboard" xkb_file $HOME/.config/keymap_with_locked_modifiers.xkb

= How the xkb file was produced =

== Obtain a dump of your current keyboard layout ==

Make sure you did not disable Xwayland, then run
 xkbcomp $DISPLAY kbd.dump

You now have a complete description of the currently used keyboard layout.

== Enable Sticky Behavior ==
Use sed, or your favorite editor (!) to change all instances of SetMods into LatchMods

 sed -i 's|SetMods|LatchMods|g' kbd.dump

This will make all modifiers --

 Control+Shift+Alt+Meta+Super+Hyper+Lock;

-- sticky.  Namely, press then release the modifier, followed by pressing another key, will behave
as if the keys have been pressed together.

If the same modifier is pressed and released after the first press-release, the stickiness will be deactivated.

== You are done ! ==

Now instruct sway to load the keymap file.

 swaymsg input "type:keyboard" xkb_file $HOME/kbd.dump

If you do not like it, enter

 swaymsg reload

to restore to the previous state.

== Caps Lock indicator as Sticky indicator ==

You can use Caps Lock indicator as an indicator for stickiness by changing the block

 indicator "Caps Lock" {
   ...
 }

into

      indicator "Caps Lock" {
          whichModState= latched+locked;
          modifiers= Control+Shift+Alt+Meta+Super+Hyper+Lock;
      };

In the same way, you can make use of NumLock and Scroll Lock indicators.

This turns on the Caps Lock LED whenever a Control, Alt (Mod1) or Shift key is sticky locked giving a visual hint to any locked keys.

== Remapping Keys ==

we can directly modify the xkb configuration file in the following manner:

replace:

  key <CAPS> {         [       Caps_Lock ] };

with

  key <CAPS> {         [       Control_L ] };

replace:

  modifier_map Lock { <CAPS> };

with

  modifier_map Control { <CAPS> };

== Opinionated Keymap for Emacs ==

For en-US keyboard only.

I know it is not for everybody, but for a more ergonomic and symmetrical layout, I opted to map both Caps Lock and Apostrophe to Ctrl.  To compensate,

Tab -> Apostrophe
Right Ctrl -> Tab

I can use Ctrl-I as replacement for Tab.

Implementation:

 <     key  <TAB> {         [             Tab,    ISO_Left_Tab ] };
 ---
 >     key  <TAB> {         [      apostrophe,        quotedbl ] };
 1309c1309
 <     key <AC11> {         [      apostrophe,        quotedbl ] };
 ---
 >     key <AC11> {         [       Control_R,       Control_R ] };
 1351c1351
 <     key <CAPS> {         [       Caps_Lock ] };
 ---
 >     key <CAPS> {         [       Control_L,       Control_L ] };
 1426,1430c1426,1430
 <     key <KATA> {         [        Katakana ] };
 <     key <HIRA> {         [        Hiragana ] };
 <     key <HENK> {         [     Henkan_Mode ] };
 <     key <HKTG> {         [ Hiragana_Katakana ] };
 <     key <MUHE> {         [        Muhenkan ] };
 ---
 >     key <KATA> {         [        Alt_L ] };
 >     key <HIRA> {         [        Alt_L ] };
 >     key <HENK> {         [        Alt_L ] };
 >     key <HKTG> {         [        Alt_L ] };
 >     key <MUHE> {         [        Alt_L ] };
 1432c1432
 <     key <RCTL> {         [       Control_R ] };
 ---
 >     key <RCTL> {         [             Tab ] };
 1472c1472
 <     key <COMP> {         [            Menu ] };
 ---
 >     key <COMP> {         [         Super_R ] };
 1580a1581
 >     modifier_map Control { <AC11> };
 1584c1585
 <     modifier_map Lock { <CAPS> };
 ---
 >     modifier_map Control { <CAPS> };
 1587d1587
 <     modifier_map Control { <RCTL> };
