Deft is an Emacs mode for quickly browsing, filtering, and editing directories of plain text notes, inspired by Notational Velocity and Simplenote.

http://jblevins.org/projects/deft/

There's also Zettledeft project (https://www.eliasstorms.net/zetteldeft/) that builds on Deft and provides a framework to build a Zettelkasten information system. The zk project from https://github.com/localauthor/zk is very much like Zetteldeft, but it implements a much simpler and lightweight zettelkasten-style framework without building on Deft.

----

Notational Velocity provides a show-hide function key, letting you pop in-and-out of the interface quickly.  I recreated a crude version of this in Deft, bound to f6.

Note - if you want to use a major-mode other than text-mode for your deft notes, set deft-note-extension to a file-extension that has an entry in [[AutoModeAlist|auto-mode-alist]]

{{{
(define-minor-mode deft-note-mode "Deft notes" nil " Deft-Notes" nil)
(setq deft-text-mode 'deft-note-mode)
(defun kill-all-deft-notes ()
  (interactive)
  (save-excursion
    (let((count 0))
      (dolist(buffer (buffer-list))
        (set-buffer buffer)
        (when (not (eq nil deft-note-mode))  
          (setq count (1+ count))
          (kill-buffer buffer)))
      )))
(defun deft-or-close () (interactive) (if (or (eq major-mode 'deft-mode) (not (eq nil deft-note-mode)))
                                          (progn (kill-all-deft-notes) (kill-buffer "*Deft*"))
                                        (deft)
                                        ))
(global-set-key [f6] 'deft-or-close)
}}}

----

== Discussion ==

[new]
I see some blocking behaviour with defts autosave feature after having emacs open for awhile with deft running, any suggestions on what this might be (only happens with the autosave in deft)? - anon

[new:JasonBlevins:2013-01-28 16:52 UTC]
Thanks for pointing this out.  I believe this is fixed now, by [http://jblevins.org/git/deft.git/commit/?id=d45bfd76c95e0439175dc17dc22fe6864c39c769
 this commit].  It will be in the next release, but it's a one-line patch if you'd like to apply it yourself. --JasonBlevins

[new:]
It is a powerful tool to manage my journal and blogs. But is there any way to manage multiple projects with deft-mode? -- LdBeth
----

[new:2020-05-31:2020-05-31 14:56 UTC]
Multiple projects can be done by
{{{
; form http://pragmaticemacs.com/category/deft/
(defun bjm-deft (dir)
  "Run deft in directory DIR"
  (setq deft-directory dir)
  (switch-to-buffer "*Deft*")
  (kill-this-buffer)
  (deft)
  )
}}}
If you only want to set the folder temporary, you can do 
{{{
(defun z-deft (dir)
  "Run deft in directory DIR but doesn't change deft-directory"
  (let ((temp deft-directory))
  (setq deft-directory dir)
  (switch-to-buffer "*Deft*")
  (kill-this-buffer)
  (deft)
  (setq deft-directory temp)
  ))
}}}


CategoryWriting
