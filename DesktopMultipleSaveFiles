How to run Desktop Save Mode with multiple save files.

According to the docs you should be able to get different .emacs.desktop files by simply cd'ing into a different directory before starting emacs:

https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html

However, I can't get it to actually work.  Either it's broken or the docs are misleading, or I just haven't had enough coffee today.

[new] /You haven't had enough coffee!/ (Or perhaps your search engine is also under-caffeinated.)

As of Emacs 24.3, the current working directory is no longer on the <code>desktop-path</code> by default. Refer to the release notes in [https://github.com/jwiegley/emacs-release/blob/adfd5933358fdf6715423dee8169eb3cd7d982db/etc/NEWS#L1725 etc/NEWS]

If you add the following to your <code>.emacs</code> file, the cd-into-your-desktop-containing-directory technique will work:

<pre>
(setq desktop-path '("." "~/.emacs.d/" "~"))
</pre>

[new] 

These commands do work, but it's inconvenient to manually enter them every time.  I have to start emacs with --no-desktop (which is trivial) and then execute desktop-change-dir and then desktop-save-mode to activate desktop-save-mode.

<pre>
M-x desktop-save          ; saves the desktop
M-x desktop-change-dir    ; save current desktop and load a different one
M-x desktop-revert        ; revert to desktop previously loaded
</pre>

Thanks to the very helpful people on Freenode #emacs, I found the following happy medium of starting emacs with a simple bash script that sets an environment variable, and adding a bit of code to my .emacs to, if that environment variable is set, set the desktop-path to its value.

It's not perfect.  It doesn't open with the emacs window on the same buffer I had open when I exited emacs, although that buffer is still in the list of open buffers.  Apparently that detail is saved somewhere other than the .emacs.desktop file.  Some research suggests looking into the  desktop-restore-frames documentation for that.

There's apparently no way / no easy way / no documented way to pass parameters in from the command line and use them in .emacs, but you *can* use elisp's getenv to get at environment variables.  So first make a little script to set an EMACSSAVEMODEDIR variable:

<pre>
#!/bin/bash
echo "starting emacs with desktop-save from /home/username/myproject/.emacs.desktop"
export EMACSSAVEMODEDIR="/home/username/myproject"
cd /home/username/myproject
/usr/bin/emacs24 --maximized 
</pre>

And then add a bit of elisp in .emacs to set desktop-path to the EMACSSAVEMODEDIR value, if EMACSSAVEMODEDIR exists.  

Make sure you put it before the (desktop-save-mode 1) line, so desktop-path will be set properly when desktop-save-mode starts.

I've included the entire desktop-save-mode section of my .emacs below.  This includes the my-desktop-save function, from https://www.emacswiki.org/emacs/Desktop.   

The first two lines check for the existence of the environment variable EMACSSAVEMODEDIR, and if found, calls setq desktop-path.  I suppose I could be fancier here and, for example, retain any original desktop-path value and just prepend EMACSSAVEMODEDIR.  But I'd rather it simply break and tell me the .emacs.desktop file isn't there.

<pre>
(when (getenv "EMACSSAVEMODEDIR")
  (setq desktop-path (list (getenv "EMACSSAVEMODEDIR"))) )
  
(desktop-save-mode 1)

; from http://www.emacswiki.org/emacs/Desktop#toc3
; "add something like this to your init file to auto-save your desktop when Emacs is idle: â€“ Doom"
(require 'desktop)
  (defun my-desktop-save ()
    (interactive)
    ;; Don't call desktop-save-in-desktop-dir, as it prints a message.
    (if (eq (desktop-owner) (emacs-pid))
        (desktop-save desktop-dirname)))
  (add-hook 'auto-save-hook 'my-desktop-save)
</pre>


[new:DrewAdams:2017-02-28 14:53 UTC]
If you use [[Bookmark+]] then you can easily have any number of desktops and flip between them simply. It's as easy as doing '''`C-x p K'''', to bookmark the current desktop (saving it to a desktop file), and '''`C-x j K'''' to jump to a desktop bookmark (restoring that desktop).  You give each desktop bookmark a name, and use that name (with completion) to update the desktop or jump to it.  Your desktop files can be located anywhere.  In particular, you can have more than one desktop file in the same directory. -- DrewAdams

[new:rjhwelsh:2020-09-17]
I use an md5 of the commandline arguments to save the desktop for when I am editing a particular project.
Typically, I just point emacs to the directory I want and proceed from there.

Commandline example.
<pre>
/usr/bin/emacs /a/new/project
</pre>

Emacs customization.
<pre>
   ;; Hash representing session
  (setq desktop-hash 
     (secure-hash 'md5 (apply 'concat command-line-args)))
  ;; Adjusted desktop names, kept in a default single directory
  (setq 
      desktop-base-file-name (concat ".emacs.desktop" desktop-hash)
      desktop-base-lock-name (concat ".emacs.desktop" desktop-hash ".lock"))
</pre>

-- rjhwelsh
