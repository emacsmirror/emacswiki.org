I use Emacs. I've gone from Brief to Zeus with a tiny diversion to Vedit before switching on July 10, 2000. I'm currently running v30.1 on my most modern computer that runs Windows 10 Pro 2009 64-bit.

My background is electrical engineering.  However I specialize in automating data mining and analysis, as well as computer administration, CAD and circuit simulation.  I use MS-DOS Batch file, Visual Basic, VBScript, Lisp, Fortran and Python.

I used to use PlannerMode to organize my many endless work projects. I originally used PlannerMode for a personal journal and a work plan, so I came up with a quick and dirty way of having two planner-directories. I called this "select-planner-directory" and I posted the snippet in PlannerModeContrib. "select-planner-directory" was intended to work with the version of Planner that's based on emacs-wiki.

But I decided to try OrgMode in June 2010. When I hunkered down and followed the JohnWiegley online tutorial, I became hooked.

When I upgraded to Emacs 30.1, I changed my .emacs to remove unnecessary packages.
I am a senior member of IEEE, and served for many years on the Executive Committee of my local section.

I can be reached at r.zeitler@ieee.org.  But questions or comments that pertain to Emacs should be directed to an expert.

My .emacs:
<pre>
;;; -*- lexical-binding: t -*-
;;; Time-stamp: "2025-04-17 09:34:58 RayZ"

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)


(setq initial-frame-alist '((top . 0) (left . 0)
			    (width . 135) (height . 45)
			    (cursor-type . bar)
			    ))

(setq frame-title-format '("GNU Emacs " emacs-version ": %b" (buffer-file-name ": %f")))
(keymap-global-set "C-+" 'text-scale-increase)
(keymap-global-set "C-=" 'text-scale-decrease)

;; The following two functions are from http://emacsredux.com/blog/2013/04/02/move-current-line-up-or-down/
(defun move-line-up ()
  "Move up the current line."
  (interactive)
  (transpose-lines 1)
  (forward-line -2)
  (indent-according-to-mode))

(defun move-line-down ()
  "Move down the current line."
  (interactive)
  (forward-line 1)
  (transpose-lines 1)
  (forward-line -1)
  (indent-according-to-mode))

;; Function to insert the current date
(defun insert-date-and-time ()
  "Insert the date and time into the current buffer."
  (interactive)
  (insert (format-time-string "%Y-%m-%d" (current-time))))

(defun shellfn ()
  "Invokes the shell using the current buffer file name as a parameter."
  (interactive)
  (shell-command (concat "start " (buffer-file-name))))

(defun exeln ()
  "Execute the current line as a shell command."
  (interactive)
  (shell-command (buffer-substring (line-beginning-position)
                                   (line-end-position))))

(keymap-global-set "C-<tab>" 'next-buffer)
(keymap-global-set "C-S-<tab>" 'previous-buffer)
(keymap-global-set "C-c x" 'exeln)
(keymap-global-set "C-c s" 'shellfn)
(keymap-global-set "C-c d" 'insert-date-and-time)
(keymap-global-set "M-q" 'fill-paragraph)
(keymap-global-set "C-c f" 'find-file-at-point)
; The following is from Francis Litterio <franl@world.std.com>
(keymap-global-set "S-<left>" #'(lambda () (interactive) (scroll-left 1)))
(keymap-global-set "S-<right>" #'(lambda () (interactive) (scroll-right 1)))

;; C-backspace should delete previous word, not whitespace up to word...
;; from https://emacs.stackexchange.com/questions/30616/py-hungry-delete-backwards-instead-backward-kill-word-in-python-mode-el
(add-hook 'python-mode-hook
          (lambda ()
            (define-key python-mode-map (kbd "<C-backspace>") 'backward-kill-word)))

(keymap-global-set "C-c a" 'org-agenda)

(server-start)
;; per https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html
;; See also: https://www.gnu.org/software/emacs/manual/html_node/emacs/Invoking-emacsclient.html
;; ...and: https://www.gnu.org/software/emacs/manual/html_node/emacs/emacsclient-Options.html

;; per https://emacs.stackexchange.com/questions/80908/using-hunspell-in-emacs-on-windows-10
(setenv "LANG" "en_US.UTF-8")
(setenv "DICPATH" "C:\\Program Files\\LibreOffice\\share\\extensions\\dict-en\\")
(setq-default ispell-program-name "C:\\Users\\Public\\Programs\\Hunspell\\bin\\hunspell.exe")
(setq-default ispell-complete-word-dict "~/english-words.txt")
;(global-set-key (kbd "C-/") 'ispell-word)
;(global-set-key (kbd "C-M-/") 'ispell-region)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(before-save-hook '(time-stamp))
 '(blink-matching-paren t)
 '(column-number-indicator-zero-based nil)
 '(column-number-mode t)
 '(delete-selection-mode t)
 '(inhibit-startup-screen t)
 '(mode-line-position-column-format '("C%"))
 '(org-agenda-files
   '("~/SDB.org" "~/blog.org" ~/bills.org"))
 '(org-agenda-skip-deadline-if-done t)
 '(org-agenda-skip-scheduled-if-done t)
 '(org-deadline-warning-days 8)
 '(org-mouse-features
   '(yank-link activate-stars activate-bullets activate-checkboxes))
 '(org-reverse-note-order t)
 '(org-todo-keywords
   '((sequence "TODO(t)" "STARTED(s!)" "WAITING(w@/!)" "DEFERRED(f!)" "|"
	       "CANCELLED(c!)" "DONE(n!)")))
 '(package-selected-packages
   '(csv-mode elpy git-modes gnuplot helm htmlize mastodon org-journal
	      python python-mode swift-mode toc-org))
 '(show-paren-style 'parenthesis)
 '(show-trailing-whitespace t)
 '(size-indication-mode t)
 '(text-mode-hook
   '(turn-on-flyspell turn-on-auto-fill text-mode-hook-identify))
 '(tool-bar-mode nil))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "DejaVu Sans Mono" :foundry "outline" :slant normal :weight regular :height 92 :width normal))))
 '(show-paren-match ((t (:background "pale green"))))
 '(show-paren-mismatch ((t (:background "yellow" :foreground "red" :weight bold))))
 '(trailing-whitespace ((t (:background "pale goldenrod")))))
</pre>

----
CategoryHomepage
