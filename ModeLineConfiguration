[[de:indonesia]]
The Emacs ModeLine is configurable, offering special modes and functions that change its functionality. The mode-line is [[buffer]]-specific, so the same buffer has the same mode-line in different windows.

Similar to the mode-line are the HeaderLine (at the top of an Emacs internal [[window]]) and the FrameTitle (typically appearing in the title bar of the host GUI window containing Emacs).







== Standard Minor Modes ==

Display of some information in the mode-line is governed by these standard minor modes.  Repeat a command to toggle on and off as needed, or place in your InitFile to turn it on by default.

* `display-time-mode' -- Display the current time -- DisplayTime
* `line-number-mode' -- Display the current line number.  See also LineNumbers
* `column-number-mode' -- Display the current column number
* `size-indication-mode' -- Show the current buffer size.  See Manual:size-indication-mode
* `display-battery-mode' -- Show laptop battery information -- DisplayBatteryMode.






== Customize UI ==

There is an interactive [[CustomizingAndSaving|Customization]] group for the mode-line.  In the standard menus, find *Options* -> *Customize Emacs* -> *Top-level Customization Group*, then navigate to *Environment* -> *Mode Line*.







== Mode-Line Enhancements ==

* DelightedModes -- Customise how major and minor modes appear in the mode-line.
* HideModeLine -- Save screen real estate by hiding the mode-line.
* LunarModeLine -- Display current lunar phase in the modeline.
* ModeLineDirtrack -- show the buffer's current directory in the mode-line.
* ModeLineMinorModeMenu -- Pop up minor-mode menus from the mode-line.
* ModeLinePosAtBeginning -- Display line and column numbers at the start of the mode-line, so they are visible even when the TextCursor is inside a function with a long name.
* ModeLineRegion -- Display size of active [[region]] in the mode-line, in various ways.  
* [https://github.com/seagle0128/doom-modeline Mode-line from Doom Emacs]
* [https://github.com/TheBB/spaceline Mode-line from Spacemacs]
* NyanMode -- Indicate your position in the buffer in the mode-line, with a little help from [WikiPedia:Nyan_Cat Nyan Cat].
* OcticonsModeLine -- Icons in the mode-line thanks to the [https://github.com/rougier/emacs-octicons octicons] font.
* PowerLine -- How to make VIM-like [https://github.com/Lokaltog/vim-powerline powerline].
* ShowPointMode -- Show value of point in the mode-line.
* SmartModeLine -- Smart, sexy, and space efficient mode-line. [https://github.com/Bruce-Connor/smart-mode-line/]
* SmlModeLine -- Indicate in the mode-line, in a scrollbar-like way, the portion of the buffer that is visible in the window.
* [[wcMode]] -- Show character/word/line count in mode-line






== Build your own ==

The ModeLine is defined by the variable `mode-line-format', itself made up of several more variables.  Thus, you can alter `mode-line-format' to change the whole thing, or alter any of the component variables to change just that part.  The latter may also provide better coexistence with other parts of Emacs that use the mode line variables.

Each of these variables is expected to contain a ''mode line construct''.  A mode line construct is most commonly a string, or, a list starting with a string, where each list member is concatenated together to form a string.  Within those strings, [PercentConstruct %-constructs] are replaced with other values.  See ModeLineConstruct for full details, including idioms and tips.

The desired variables would generally be placed in one's InitFile, to take effect for every Emacs session.  However, you can also use them in LispInteractionMode.  This may be useful to test and tune to your liking, before you save the finished result.

=== Default mode-line ===

The default `mode-line-format' (as of Emacs 27.1, circa 2020) is:

    ("%e" mode-line-front-space mode-line-mule-info mode-line-client mode-line-modified mode-line-remote mode-line-frame-identification mode-line-buffer-identification mode-line-position (vc-mode vc-mode) mode-line-modes mode-line-misc-info mode-line-end-spaces)

The leading ##"%e"## is a string containing a [PercentConstruct %-construct]; it will be replaced with any active out-of-memory error message, or an empty string otherwise.

##(vc-mode vc-mode)## is a conditional, which will evaluate the function `vc-mode' and display the resulting information only if `vc-mode' is non-##nil##.

The remaining elements are described in the next section.

=== Mode-line components ===
     
The mode-line is typically built from several variables, each itself a mode line construct.

|| Symbol   || Meaning ||
|| ##mode-line-front-space## || Dash (##-##) for text terminals, a space (## ##) for graphic displays ||
|| ##mode-line-mule-info## || Information on character sets, encodings, and other human-language details ||
|| ##mode-line-client## || Identifies frames created by ##emacsclient## ||
|| ##mode-line-modified## || Modified and read-only status ||
|| ##mode-line-remote## || At-sign (##@##) for buffers visiting remote files, otherwise a dash ||
|| ##mode-line-frame-identification## || Frame title, for some environments ||
|| ##mode-line-buffer-identification## || Buffer/file name ||
|| ##mode-line-position## || Line, column, and portion (percent) of [[point]] in buffer; total size ||
|| ##mode-line-modes## || Major and minor modes, in parenthesis; square brackets if RecursiveEdit ||
|| ##mode-line-misc-info## || Defun name for `which-function-mode', clock for `display-time-mode'
|| ##mode-line-end-spaces## || A line of dashes for text terminals; nothing for graphics displays ||

== Examples ==

=== Position as coordinates ===

If you prefer line and column to be reported like coordinates, you might use this:

    (setq mode-line-position (list "(%l,%c)"))

This alters just `mode-line-position', leaving the rest of the mode-line untouched.  This approach confers several benefits: It saves you from having to recreate the entire mode line just to change one thing; it allows other minor modes and enhancements to interact with the mode-line; it allows other parts of Emacs which want to show the mode line position to use your format.

`list' is needed here because symbols whose ''value'' is a string are not subject to [PercentConstruct %-construct] replacement.  See [[ModeLineConstruct#NestedStrings]] for details.

=== Descriptive labels ===

Perhaps you prefer descriptive labels over cryptic conciseness, and want your mode line to look like this:

    Lisp Interaction: buffer *scratch*, line 5 -- user: alice

To do so, you might use this:

    (setq mode-line-format
          (list
           ;; name of major mode
           "%m: "
           ;; buffer name
           "buffer %b, "
           ;; line number
           "line %l "
           "-- user: "
           ;; user login name/ID
           (getenv "USER")))

== See also ==

* ModeLineConstruct
* PercentConstruct
* ModeLine
* HeaderLine
* FrameTitle
* Emacs Lisp Reference Manual: [[Manual:Mode Line Format]]
* Emacs Lisp Reference Manual: [[Manual:Mode Line Data]]

----
CategoryDisplay
CategoryEditing
CategoryWindows
CategoryModeLine
