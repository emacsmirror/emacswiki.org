CsvMode is a package created by FrancisJWright for editing comma-separated value files (##.csv##).

It is available as [https://elpa.gnu.org/packages/csv-mode.html csv-mode] from GNU [[ELPA]].

The commands include sorting numerically or alphabetically on a particular field, cutting and pasting columns of fields, padding to align fields, or removing padding.

The default format used is a comma separator (##,##) and double quotes (##""##) for field quoting.  This can be customized, for instance with a different separator for European locales (where a comma is the decimal separator).

See also,

* SpreadSheet -- some of the spreadsheets can also read CSV
* [[Synonyms]] -- initially supports thesaurus data, but can create interactive relations and hypertext interfaces to self-referential CSV data.

== Set a different colour to each column ==

Put this somewhere in your configuration (I suggest a separate file that's loaded to the configuration):

{{{

(require 'cl)
(require 'color)

(defun csv-highlight (&optional separator)
  (interactive (list (when current-prefix-arg (read-char "Separator: "))))
  (font-lock-mode 1)
  (let* ((separator (or separator ?\,))
         (n (count-matches (string separator) (point-at-bol) (point-at-eol)))
         (colors (loop for i from 0 to 1.0 by (/ 2.0 n)
                       collect (apply #'color-rgb-to-hex 
                                      (color-hsl-to-rgb i 0.3 0.5)))))
    (loop for i from 2 to n by 2 
          for c in colors
          for r = (format "^\\([^%c\n]+%c\\)\\{%d\\}" separator separator i)
          do (font-lock-add-keywords nil `((,r (1 '(face (:foreground ,c)))))))))
}}}

Then hook it to `csv-mode`:

    (add-hook 'csv-mode-hook 'csv-highlight)


Works best with some more hooks:

    (add-hook 'csv-mode-hook 'csv-align-mode)
    (add-hook 'csv-mode-hook '(lambda () (interactive) (toggle-truncate-lines nil))))


Inspired by https://www.reddit.com/r/emacs/comments/26c71k/comment/chq2r8m

----
CategoryFinancial
CategoryModes
DataModes
