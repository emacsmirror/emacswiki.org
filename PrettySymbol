prettify-symbols-mode allows you to render certain strings as symbols, i.e. showing ##->## as -->.

It is included as of Emacs 24.4. It can be customized by changing ##prettify-symbols-alist##.

== Customization ==

You may wish to use different symbols depending on the major mode you're writing in; you can use a hook for specific modes.

{{{
(add-hook 'prog-mode-hook
  (lambda ()
   (setq prettify-symbols-alist
      '(("lambda" . ?λ)
	("->"     . ?→)
	("map"    . ?↦)
	("/="     . ?≠)
	("!="     . ?≠)
	("=="     . ?≡)
	("<="     . ?≤)
	(">="     . ?≥)
	("&&"     . ?∧)
	("||"     . ?∨)
	("sqrt"   . ?√)
	("..."    . ?…))))
   (prettify-symbols-mode 1))
}}}

== Related Projects ==

* [https://github.com/akatov/pretty-mode pretty-mode]
* [https://github.com/drothlis/pretty-symbols pretty-symbols-mode] -- an attempt to replace most of the below with a proper package (available on [http://melpa.milkbox.net/ MELPA]) and under source control to facilitate contributions.
* [https://bitbucket.org/mortiferus/latex-pretty-symbols.el latex-pretty-symbols.el] -- As above, but contains a long list of latex codes and their unicode equivalent. Handles sub/super-scripted numbers and (some) letters. Available on [http://melpa.milkbox.net/#/latex-pretty-symbols MELPA]
* PrettyLambda -- Show ##lambda## as the Greek letter.
* PrettyGreek -- Generalization of PrettyLambda for other Greek letters.
* TrentBuck's pretty symbols -- He says they horribly mess up wrapping (lines become too long) and alignment -- obvious if you do `##C-x v =##'.
** http://paste.lisp.org/display/42335/raw
** http://paste.lisp.org/display/42335,2/raw
* Lisp:pretty-mode.el
** I packages this up with my mappings as an ELPA package here http://www.wisdomandwonder.com/article/6399/emacs-pretty-mode-plus-elpa-package -- GrantRettke
* PrettySymbolsForLanguages -- Language-specific display of char sequences as fancy characters or symbols.
* UnParenMode -- Hide display of parens.
* [https://gitorious.org/alezost-emacs/pretty-sha-path pretty-sha-path] -- Prettify Guix/Nix store paths (/gnu/store/…-foo-0.1)
