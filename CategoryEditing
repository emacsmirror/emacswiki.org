Click the heading to list pages in this category.
This category is about editing, not modes.  See CategoryModes, instead.

* Moving text
** MoveLine -- Moving the current line
** MoveRegion -- Moving a region
** MoveLineRegion -- Indifferently move the current line or region
** [https://github.com/targzeta/move-lines move-lines] -- Indifferently move the current line or the lines surrounding region (like Eclipse)
** MoViMentMode -- A minor mode for easier cursor movement

* [[kill|Killing]], [[yank|yanking]], copying and deleting:
** AproposUnicode -- Copy Unicode characters to the [[kill ring]] or the SecondarySelection
** CopyFromAbove -- Copy line or characters from previous line
** CopyWithoutSelection -- simply copy current [[line]], current word and current paragraph to the [[kill ring]] without selecting each line, word or paragraph
** CopyingWholeLines -- Copying whole lines
** DeleteKillAndCopy -- take any motion command and prepend it with a suitable key to delete, kill or copy the text passed over
** DeleteSelectionMode -- type to replace the current selection (or backspace to delete it)
** DeletingSyntax -- an alternative to killing by words
** DeletingWhitespace -- delete extra whitespace
** KillOrCopyToIsearch -- [[kill|Kill]] or copy from [[point]] up to where you are Isearching 
** LineCopyChar -- Copy character(s) from the line before or after to the current line.
** Lisp:savekill.el -- Save kill-ring immediately and restore to protect from emacs crash.
** Motion/kill do-what-I-mean -- [[cursor]] movement and [[kill|killing]] [[DWIM]] functions.  Lisp:motion-and-kill-dwim.el
** MousePlus -- highlight the [[yank]] position while you press `mouse-2', so you hit the right spot
** RectangleCommands --  commands that operate across lines in a region in a column-intelligent manner.
** Lisp:view-kill.el -- Displays the entire kill ring as a single page menu of numbered items.
** WholeLineOrRegion -- operate on current [[line]] if [[region]] is undefined
** ZapToChar -- Delete the characters from [[point]] to a character you specify.
** KillMatchingLines -- The power of ‘M-x flush-lines’ with killing.
** [[Anything]] -- `M-x anything-show-kill-ring' narrows the kill-ring by multiple patterns.
** [[MRU-yank]] -- maintain [[kill ring]] as MRU (Most Recently Used) stack.  Similar to the application stack (M-tab) on MS Windows
** duplicate-previous/next-line lets you replace current line with a neighboring one by cycling through them like you can with history in Bash. I bind them to M-n and M-p.  Lisp:duplicate-line.el
** See also CategoryRegion
* [[Registers]]:
** RegAdhoc -- automatically add [[register]]s and show their destinations
** BetterRegisters -- [[register]] enhancements, [[keyboard macro]]s
** UnifyKillringAndRegister -- make [[register]]s easy to use
** RegisterChannel -- move around like switching TV channels
* [[cursor|Cursor]] indication
** ChangingCursorDynamically -- change cursor type and color, depending on context
** CrosshairHighlighting – highlight the current [[line]] and column; track cursor or show cross hairs momentarily.
** HighlightCurrentLine -- highlight the line of the cursor
** HighlightCurrentColumn -- highlight the column of the cursor
* Column indication and finding long [[line]]s:
** ModeLine, ModeLinePosition -- current-column in [[mode line]]; highlight when too large
** RulerMode -- a [[minor mode]] showing a ruler with columns, tab stops and more
** PopupRuler -- temporarily displays a column ruler just above point
** ColumnEnforceMode -- a [[minor mode]] for highlighting text that extends past a certain column limit.
** ColumnMarker -- displays semi-permanent column markers
** HighlightCurrentColumn -- highlight the column of the cursor
** FindLongLines -- commands to find long lines
* Numbering:
** RenumberList -- renumber your numbered lists
** ReplaceRegexp -- renumber lists using regular expressions, emacs >= 22
** ReplaceCount -- renumber lists using regular expressions, emacs < 22
** IncrementNumber -- sometimes useful while using [[keyboard macro]]s
** NumberLines -- put [[line]] numbers in source code -- useful with LaTeX
** LineNumbers -- display [[line]] numbers (without changing the text)
* Text tricks:
** FormattingText -- automagically format text
** RotateText -- rotate a buffer string, replacing it by each of a series of predefined replacements, in turn.
** SwappingText -- swap regions of text
** AlignCommands -- align text with respect to spaces, assignments or [[regexp]]
** ColumnizeWords -- format a list of words or quoted strings into columns
** DoubledWords -- find and delete doubled words
** DuplicateLines -- find and delete duplicate lines
** ReverseWords -- Reverse the order of words in the [[region]].  Words can be on the same line.  Does not sort.
** InsertingTodaysDate -- insert today's date in letters or source code
** InsertFileName -- have Emacs help insert file name into the [[buffer]]
** ParEdit -- structured editing of s-expressions (parentheses)
** RepeatInsert -- insert repeating patterns, such as lists of numbers
** RotateWordCapitalization -- rotate the capitalization of the current word
** SimplerWordCapitalization -- make `upcase-word' (M-u), `downcase-word' (M-l), and `capitalize-word' (M-c) work on [[region]]s too.
** [[Multiverse]] -- manage multiple versions of [[buffer]]s in an Emacs session
** SurroundRegion -- surround the region with a string such as quotes, begin/end, etc.
** See also EmacsNiftyTricks
* [[line|Lines]]:
** LineCommands
** RunCommandOverLines -- execute a command for several lines, like in `ed' (TheTruePath)
** EndOfLineTips -- How to convert between different system line ending characters.
* Jumping around, and seeing where you've been
** MarkCommands -- Use of [[mark]] and [[point]] to jump around
** Lisp:hqw-goto.el -- A quick way to go to specific window line and position.
** [[quick-jump.el]] -- -Remember current position,and jump back
** BookMarks -- Jump to places you have recorded (persistently or not).
*** [[Bookmark+]] -- Extensions to standard bookmark features, including VisualStudio-like bookmarks
*** VisibleBookmarks -- VisualStudio-like bookmarks for quick in-buffer navigation
** BreadcrumbForEmacs -- Leave breadcrumb bookmarks in the buffers, and jump back to them quickly.
** [[Icicles - Tripping]] -- Jump around among various sets of things (projects, files, [[bookmark]]s, [[buffer]]s, [[marker]]s, [[Info]] pages, search hits, [[window]]s, [[frame]]s,...).
** FastNav -- Multiple commands to support quick jump to, replace at, kill at, etc. the next/previous occurences of characters.
* Text checking
** TextLint -- check your scientific writing for common style errors.
** [[CategorySpelling|Spelling]] -- spell-checking
* Grammar Checker
** [http://www.emacswiki.org/emacs/BaoqiuCui#toc2 Grammar Checker] -- Use [http://www.link.cs.cmu.edu/link Link Grammar] as the grammar checker back-end.
** [http://www.emacswiki.org/emacs/langtool.el langtool.el] -- Use [https://languagetool.org Language Tools] as grammar checker back-end
* [CollaborativeEditing Collaborative Editing]
